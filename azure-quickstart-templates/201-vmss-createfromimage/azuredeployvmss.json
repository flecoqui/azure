{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newImageStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the your storage account"
      }
    },
    "newImageStorageContainerName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the container in your storage account"
      }
    },
    "newImageVhdName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the your customized VHD"
      }
    },

    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 61
    },
    "vmssInstanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      },
      "maxValue": 100
    },
    "vmssSize": {
      "type": "string",
      "defaultValue": "Standard_F1",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "vmssAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
    "vmssFrontEndLBPort": {
      "type": "int",
      "metadata": {
        "description": "The front end port to load balance"
      },
      "defaultValue": 80
    },
    "vmssBackEndLBPort": {
      "type": "int",
      "metadata": {
        "description": "The front end port to load balance"
      },
      "defaultValue": 80
    },
    "vmssProbeIntervalInSeconds": {
      "type": "int",
      "metadata": {
        "description": "The interval between load balancer health probes"
      },
      "defaultValue": 15
    },
    "vmssNumberOfProbes": {
      "type": "int",
      "metadata": {
        "description": "The number of probes that need to fail before a VM instance is deemed unhealthy"
      },
      "defaultValue": 5
    },
    "vmssProbeRequestPath": {
      "type": "string",
      "metadata": {
        "description": "The path used for the load balancer health probe"
      },
      "defaultValue": "/default.htm"
    }
  },
  "variables": {
    "storageAccountName": "[parameters('newImageStorageAccountName')]",
    "storageAccountType": "Standard_LRS",
    "storageAccountContainerName": "vhds",
    "imageName": "[parameters('newImageVhdName')]",
    "sourceImageVhdUri": "[concat('http://',parameters('newImageStorageAccountName'),'.blob.core.windows.net/',parameters('newImageStorageContainerName'),'/',parameters('newImageVhdName'))]",
    "location": "[resourceGroup().location]",
    "publicIPAddressName": "[concat(parameters('vmssName'), 'pip')]",
    "vmName": "[concat(parameters('vmssName'), 'vm')]",
    "OSDiskName": "[concat(parameters('vmssName'), 'osdisk')]",
    "virtualNetworkName": "[concat(parameters('vmssName'), 'vnet')]",
    "nicName": "[concat(parameters('vmssName'), 'nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "osDiskVhdName": "[concat('http://',parameters('newImageStorageAccountName'),'.blob.core.windows.net/newvhds/',variables('vmName'),'osDisk.vhd')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "lbName": "loadBalancer1",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "lbFEName": "loadBalancerFrontEnd",
    "lbWebProbeName": "loadBalancerWebProbe",
    "lbBEAddressPool": "loadBalancerBEAddressPool",
    "lbFEIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('lbFEName'))]",
    "lbBEAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('lbBEAddressPool'))]",
    "lbWebProbeID": "[concat(variables('lbID'),'/probes/',variables('lbWebProbeName'))]",

    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/images",
      "apiVersion": "2017-03-30",
      "name": "[variables('imageName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "storageProfile": {
          "osDisk": {
            "osType": "Windows",
            "osState": "Generalized",
            "blobUri": "[variables('sourceImageVhdUri')]",
            "storageAccountType": "Standard_LRS"
          }
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmssName')]"
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFEName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBEAddressPool')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "weblb",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFEIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbBEAddressPoolID')]"
              },
              "probe": {
                "id": "[variables('lbWebProbeID')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('vmssFrontEndLBPort')]",
              "backendPort": "[parameters('vmssBackEndLBPort')]",
              "enableFloatingIP": false
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('lbWebProbeName')]",
            "properties": {
              "protocol": "Http",
              "port": "[parameters('vmssBackEndLBPort')]",
              "intervalInSeconds": "[parameters('vmssProbeIntervalInSeconds')]",
              "numberOfProbes": "[parameters('vmssNumberOfProbes')]",
              "requestPath": "[parameters('vmssProbeRequestPath')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2017-03-30",
      "name": "[parameters('vmSSName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/',variables('lbName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]",
        "[concat('Microsoft.Compute/images/',variables('imageName'))]"
      ],
      "sku": {
        "name": "[parameters('vmssSize')]",
        "tier": "Standard",
        "capacity": "[parameters('vmssInstanceCount')]"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": {
              "id": "[resourceId('Microsoft.Compute/images', variables('imageName'))]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmSSName')]",
            "adminUsername": "[parameters('vmssAdminUsername')]",
            "adminPassword": "[parameters('vmssAdminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic1",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "ip1",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnetRef')]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('lbBEAddressPoolID')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }

  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[concat(parameters('dnsNameForPublicIP'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh [AdminAccount]@', parameters('dnsNameForPublicIP'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "rdpCommand": {
      "type": "string",
      "value": "[concat('mstsc /admin /v:', parameters('dnsNameForPublicIP'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "resultScript": {
      "type": "string",
      "value": "sudo cat /var/lib/waagent/Microsoft.OSTCExtensions.CustomScriptForLinux-1.5.2.0/download/0/stdout"
    },
    "httpClient": {
      "type": "string",
      "value": "[concat('http://', parameters('dnsNameForPublicIP'), '.', resourceGroup().location, '.cloudapp.azure.com/')]"
    }
  }

}